package kr.or.ddit.outsourcing.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Mapper;

import com.sun.corba.se.pept.encoding.OutputObject;

import kr.or.ddit.common.vo.AttatchVO;
import kr.or.ddit.common.vo.CommonCodeVO;
import kr.or.ddit.common.vo.PagingVO;
import kr.or.ddit.outsourcing.vo.ObjectVO;
import kr.or.ddit.outsourcing.vo.OutProjVO;
import kr.or.ddit.outsourcing.vo.SkillVO;

/**
 * 
 * @author 고혜인
 * @since 2022. 8. 16.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2022. 8. 16.      고혜인       최초작성
 * 2022. 9. 8.	  조채원		  selectFilterList, insertRequireList 추가
 * Copyright (c) 2022 by DDIT All right reserved
 * </pre>
 */
@Mapper
public interface OutProjDAO {

	/**
	 * 프로젝트 등록
	 * @param outProj
	 * @return
	 */
	public int insertOutProj(OutProjVO outProj);
	
	/**
	 * 프로젝트 수정
	 * @param outProj
	 * @return
	 */
	public int updateOutProj(OutProjVO outProj);
	
	
	/**
	 * 검색 조건에 일치하는 프로젝트 수 조회
	 * @param pagingVO
	 * @return
	 */
	public int selctOutProjCount(PagingVO<OutProjVO> pagingVO);
	
	public int selectcreatedProjCount(Map<String, Object> map);
	
	/**
	 * 검색 조건에 일치하는 프로젝트 목록 조회
	 * @param pagingVO
	 * @return
	 */
	public List<OutProjVO> selectOutProjList(PagingVO<OutProjVO> pagingVO);
	
	/**
	 * 프로젝트 상세 조회
	 * @param projId
	 * @return
	 */
	public OutProjVO selectOutProj(String projId);
	
	/**
	 * 본인이 생성한 모집중인 아웃소싱 프로젝트
	 * @param pagingVO 
	 * @return 본인이 생성한 아웃소싱 프로젝트 리스트
	 */
	public List<OutProjVO> createdProjectList(Map<String, Object> map);
	
	/**
	 * 프로젝트 삭제
	 * @param outProj
	 * @return
	 */
	public int deleteOutProj(String projId);
	
	/**
	 * 프로젝트 종료 
	 * @param outProj
	 * @return
	 */
	public int finishProj(OutProjVO outProj);
	
	
	public List<CommonCodeVO> selectObjList();
	public List<CommonCodeVO> selectSkillList();
	
	
	/**
	 * 프로젝트 상태 진행중으로 변경
	 * @param projId
	 * @return
	 */
	public int progressProj(OutProjVO outProj);
	
	
	/**
	 * 직무분야, 스킬, 지역 입력
	 * @param outProj
	 * @return
	 */
	public int objList(OutProjVO outProj);
	public int skillList(OutProjVO outProj);
//	public int projLoc(OutProjVO outProj);
	
	
	//프로젝트 직무분야, 필요보유기술, 지역 조회
	public List<ObjectVO> projObjList(String projId);
	public List<SkillVO> projSkillList(String projId);
	
	public int insertSkill(OutProjVO outProjVo);
	public int insertObj(OutProjVO outProjVo);
	
	public int delSkill(SkillVO skillVo);
	public int delObj(ObjectVO objVo);
	
	
	
	
	/**
	 * 프로젝트의 첨부파일 등록
	 * @param attatch
	 * @return
	 */
	public int insertAttatches(AttatchVO attatch);
	
	/**
	 * 프로젝트첨부파일 등록
	 * @param outProj
	 * @return
	 */
	public int insertOutProjAttatch(OutProjVO outProj);
	
	/**
	 * 첨부파일 한건의 메타데이터 조회
	 * @param attId
	 * @return
	 */
	public AttatchVO selectAttatch(String attId);

	/**
	 * 여러개의 첨부파일 메타데이터 삭제
	 * @param outProj
	 * @return
	 */
	public int deleteOutProjAttatches(OutProjVO outProj);
	public int deleteAttatches(OutProjVO outProj);
	
	/**
	 * 파일 리스트 가져오기
	 * @param outProj
	 * @return
	 */
	public List<AttatchVO> selectOutProjFileList(OutProjVO outProj);
	
	
	/**
	 * 필터링 목록 조회
	 * @return
	 */
	public List<Map<String, Object>> selectFilterList();
	
	/**
	 * 필수 검토 리스트 등록
	 * @param filterMap
	 * @return
	 */
	public int insertRequireList(Map<String, Object> filterMap);
	
}
