<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>
<%--
* [[개정이력(Modification Information)]]
* 수정일                 수정자     		   수정내용
* ----------  ---------  -----------------
* 2022. 8. 26.  조채원       	  최초작성
* Copyright (c) 2022 by DDIT All right reserved
 --%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">
<title>Insert title here</title>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
</head>
<body>
<div id="login" class="ptb ptb-xs-60 page-signin">
    <div class="container">
      <div class="row">
        <div class="main-body" style="max-width: 1000px">
            <div class="card bg-white">
              <div class="card-content" style="width:960px; height:1223px;">
                <section class="logo text-center">
                  <h2>${map.contract.contractName }</h2>
                  <p style="display:none" id="contractId">${map.contract.contractId }</p>
                </section>
                <br><br>
                    
                   <div class="text-content mt-20" style="margin-right: 10px; margin-left: 10px;">
                   	<div class="row">
                   	<p class="comMember"></p>
                     <p><strong>${map.comId }</strong> (이하“갑”이라 한다.)와  <strong>${map.genId }</strong>(이하“을”이라 한다.)은 계약건명에 명시된 업무작업을 수행하기 위해 다음과 같이 계약을 체결한다.</p>
                    </div>
                    </div>
          			<br>
                   
                	<div class="text-content mt-20">
                   	<strong>제1조【 목 적 】</strong><br>
            		<p>본 계약은 “갑”이 “을”에게 의뢰한 000의 업무를 “갑”에게 공급함에 있어 “갑”과 “을”사이에 필요한 사항을 정하는 것을 목적으로 한다.</p>
          			</div>
          			<br>
          			
                   <div class="text-content mt-20">
                   	<strong>제2조【 계 약 기 간 】</strong><br>
                   <div class="row">
            		<p>계약 기간은 <strong>${map.contract.contractSdate }</strong>로부터 <strong>${map.contract.contractFdate }</strong>까지로 하며, 갑과 을의 합의 하에 본 계약기간은 연장 될 수 있다.</p>
          			</div>
          			</div>
          			<br>
                   
                   <div class="text-content mt-20">
                   	<strong>제3조【 계 약 금 액 】</strong><br>
            		<p>총 계약금액은 <strong>${contract.contractPay }</strong>만원으로 하며 “갑”은 “을”에게 지급하기로 한다.</p><br>
					<div class="row"><p>단, 회사업무 수행을 위한 출장 등이 발생할 경우에는 “갑”이 그 비용을 지급하고, 식대 등은 “을”의 비용으로 한다.</p></div>
          			</div>
          			<br>
          			
                 
          			<div class="text-content mt-20">
                   	<strong>제4조【 납 품 】</strong><br>
            		<p>“을”은 작업 진행중 중간 완료된 성과물을 매월 일 등 회에 걸쳐 중간 납품을 하며, 최종 자료는 검토 및 수정 후 완성품으로 납품하기로 한다.</p>
          			</div>
          			<br>
          			
          			<div class="text-content mt-20">
                   	<strong>제5조【 비 밀 유 지 】</strong><br>
            		<p>“을”은 본 작업과 관련된 어떠한 일체의 정보를 외부에 누설하거나 유출해서는 안되며 이로 인해 발생하는 모든 책임은 “을”이 진다.</p>
          			</div>
          			<br>
          			
          			<div class="text-content mt-20">
                   	<strong>제6조【 자 료 제 공 】</strong><br>
            		<p>“갑”은 “을”이 작업을 수행하는데 필요한 일체의 자료를 제공하기로 한다.</p>
          			</div>
          			<br>
                   
          			
          			 <div class="text-content mt-20">
                   	<strong>제8조【 해 지 】</strong><br>
            		<p>(1) 본 계약상의 업무를 수행하기 위해 출근 등과 관련된 사항은 자유로 한다.</p>
					<p>(2) 본 계약 내용 외에도 다른 필요한 업무가 필요한 경우 “갑”은 “을”이 추가로 작업을 수행하는
						부분에 대한 인건비와 계약 기간은 상호 협의 하에 결정한다.</p>
          			</div>
          			<br>
                  
                   <div class="text-content mt-20">
                   	<strong>제7조【 근 무 조 건 】</strong><br>
            		<p>“을”의 귀책사유로 인하여 본 계약이 불이행이 되었을 경우 “을”은 “갑”이 제시한 손해배상의 책임을 진다.</p>
          			</div>
          			<br>
          			
          			 <div class="text-content mt-20">
                   	<strong>제9조【 손 해 배 상 】</strong><br>
            		<p>(1) 본 계약상의 업무를 수행하기 위해 출근 등과 관련된 사항은 자유로 한다.</p>
					<p>(2) 본 계약 내용 외에도 다른 필요한 업무가 필요한 경우 “갑”은 “을”이 추가로 작업을 수행하는
						부분에 대한 인건비와 계약 기간은 상호 협의 하에 결정한다.</p>
          			</div>
          			<br>
          			
          			<div class="text-box text-right text-xs-left  pr-70 pr-xs-0 mt-xs-15 width-75per fl" style="float:right">

              
              <div class="about-block gray-bg mb-60 padding-20 clearfix" style="background: white; margin-bottom: 10px">
            <div class="fr width-25per comImg"> 
            <c:if test="${not empty map.contract.comSign }">
				  <img src="data:image/jpeg;base64,${map.contract.comSign }" width="200" height="100" alt="com_sign">
			</c:if>
            </div>
            <div class="text-box text-right text-xs-left  pr-70 pr-xs-0 mt-xs-15 width-75per fl" style="padding-right: 10px">
              <div class="box-title mb-20">
                <h4 style="margin-top: 40px;">(갑) ${map.comId }</h4>
              </div>
            </div>
          </div>
          
           <div class="about-block gray-bg mb-60 padding-20 clearfix" style="background: white">
            <div class="fr width-25per genImg"> 
            <c:if test="${not empty map.contract.genSign }">
				  <img src="data:image/jpeg;base64,${map.contract.genSign }" width="200" height="100" alt="gen_sign">
			</c:if>
            </div>
            <div class="text-box text-right text-xs-left  pr-70 pr-xs-0 mt-xs-15 width-75per fl" style="padding-right: 10px">
              <div class="box-title mb-20">
                <h4 style="margin-top: 40px;">(을) ${map.genId }</h4>
              </div>
            </div>
          </div>
          
          <security:authentication property="principal" var="authMember" />
          <p id="role" style="display:none">${authMember.realMember.memType.get(0) }</p>
          <c:if test="${empty map.contract.genSign && authMember.realMember.memType.get(0) eq 'ROLE_GENMEM' && authMember.realMember.genId eq map.genId}">
          <div class="about-block gray-bg mb-60 padding-20 clearfix genSignPad" style="background: white">
            <div class="fr width-25per"> 
            	 <div>
				        <canvas id="canvas" width="200" height="100" style="border: 1px solid black">
				 
				        </canvas>
				    </div>
				<button id="btn-clear">삭제</button>
				<button id="btn-save">저장</button>
            </div>
            <div class="text-box text-right text-xs-left  pr-70 pr-xs-0 mt-xs-15 width-75per fl" style="padding-right: 10px">
              <div class="box-title mb-20">
                <h4 style="margin-top: 40px;" id="genId">${map.genId } 서명</h4>
              </div>
            </div>
          </div>
          </c:if>
          <c:if test="${empty map.contract.comSign && authMember.realMember.memType.get(0) eq 'ROLE_COMMEM' && authMember.realMember.comId eq map.comId}">
          <div class="about-block gray-bg mb-60 padding-20 clearfix comSignPad" style="background: white">
            <div class="fr width-25per"> 
            	 <div>
				        <canvas id="canvas" width="200" height="100" style="border: 1px solid black">
				 
				        </canvas>
				    </div>
                <button id="btn-clear">삭제</button>
				<button id="btn-save">저장</button>
            </div>
            <div class="text-box text-right text-xs-left  pr-70 pr-xs-0 mt-xs-15 width-75per fl" style="padding-right: 10px">
              <div class="box-title mb-20">
                <h4 style="margin-top: 40px;" id="comId">${map.comId } 서명</h4>
              </div>
            </div>
          </div>
          </c:if>
             </div>
            </div>
             
          </div>
        </div>
      </div>
    </div>
<script>
var header = '${_csrf.headerName}';
var token =  '${_csrf.token}'; 

var pos = {
    drawable: false,
    x: -1,
    y: -1
};
var canvas, context;
 
canvas = document.getElementById("canvas");
context = canvas.getContext("2d");
 
canvas.addEventListener("mousedown", commonListener);
canvas.addEventListener("mousemove", commonListener);
canvas.addEventListener("mouseup", commonListener);
canvas.addEventListener("mouseout", commonListener);

 
function commonListener(event){
    switch(event.type){
        case "mousedown":
            initDraw(event);
            break;
 
        case "mousemove":
            if(pos.drawable) //클릭상태인지 확인
                draw(event);
            break;
 
        case "mouseout":
        case "mouseup":
            finishDraw();
            break;
    }
}

  
function initDraw(event){
    context.beginPath(); //새로운 경로 지정
    pos.drawable = true;
    var coors = getPosition(event);
    pos.X = coors.X;
    pos.Y = coors.Y;
    context.moveTo(pos.X, pos.Y);
}
 
function draw(event){
    var coors = getPosition(event);
    context.lineTo(coors.X, coors.Y);
    pos.X = coors.X;
    pos.Y = coors.Y;
    context.stroke();
}
 
function finishDraw(){
    pos.drawable = false;
    pos.X = -1;
    pos.Y = -1;
}
 
function getPosition(event){
	//pageX 문서높이 기준
    //clienX 보이는 화면 기준
    var v_left = canvas.getBoundingClientRect().left;
    var v_top =canvas.getBoundingClientRect().top;

	//뭐얌 그냥 화면에서 얼마나 이동했는지만 체크해 주면 되남
    var x = event.clientX - v_left;
    var y = event.clientY - v_top;

    return {X: x, Y: y};
}

	/* var comPos = {
	    drawable: false,
	    x: -1,
	    y: -1
	};
	var comCanvas, comContext;
	 
	comCanvas = document.getElementById("comCanvas");
	comContext = comCanvas.getContext("2d");
	 
	comCanvas.addEventListener("comMousedown", comCommonListener);
	comCanvas.addEventListener("comMousemove", comCommonListener);
	comCanvas.addEventListener("comMouseup", comCommonListener);
	comCanvas.addEventListener("comMouseout", comCommonListener);
	
	 
	function comCommonListener(event){
	    switch(event.type){
	        case "comMousedown":
	            comInitDraw(event);
	            break;
	 
	        case "comCousemove":
	            if(comPos.drawable) //클릭상태인지 확인
	                comDraw(event);
	            break;
	 
	        case "comMouseout":
	        case "comMouseup":
	            comFinishDraw();
	            break;
	    }
	}
	
	  
	function comInitDraw(event){
		comContext.beginPath(); //새로운 경로 지정
	    pos.drawable = true;
	    var coors = comGetPosition(event);
	    comPos.X = coors.X;
	    comPos.Y = coors.Y;
	    comContext.moveTo(pos.X, pos.Y);
	}
	 
	function comDraw(event){
	    var coors = comGetPosition(event);
	    comContext.lineTo(coors.X, coors.Y);
	    comPos.X = coors.X;
	    comPos.Y = coors.Y;
	    comContext.stroke();
	}
	 
	function comFinishDraw(){
		comPos.drawable = false;
	    comPos.X = -1;
	    comPos.Y = -1;
	}
	 
	function comGetPosition(event){
	    //pageX 문서높이 기준
        //clienX 보이는 화면 기준
        var v_left = comCanvas.getBoundingClientRect().left;
        var v_top =comCanvas.getBoundingClientRect().top;

		//뭐얌 그냥 화면에서 얼마나 이동했는지만 체크해 주면 되남
        var x = event.clientX - v_left;
	    var y = event.clientY - v_top;

	    return {X: x, Y: y};
	}
	
	var genPos = {
	    drawable: false,
	    x: -1,
	    y: -1
	};
	var genCanvas, genContext;
	 
	genCanvas = document.getElementById("genCanvas");
	genContext = genCanvas.getContext("2d");
	 
	genCanvas.addEventListener("genMousedown", genCommonListener);
	genCanvas.addEventListener("genMousemove", genCommonListener);
	genCanvas.addEventListener("genMouseup", genCommonListener);
	genCanvas.addEventListener("genMouseout", genCommonListener);
	
	 
	function genCommonListener(event){
	    switch(event.type){
	        case "genMousedown":
	            genInitDraw(event);
	            break;
	 
	        case "genMousemove":
	            if(genPos.drawable) //클릭상태인지 확인
	                genDraw(event);
	            break;
	 
	        case "genMouseout":
	        case "genMouseup":
	            genFinishDraw();
	            break;
	    }
	}
	
	  
	function genInitDraw(event){
		genContext.beginPath(); //새로운 경로 지정
	    genPos.drawable = true;
	    var coors = genGetPosition(event);
	    genPos.X = coors.X;
	    genPos.Y = coors.Y;
	    genContext.moveTo(genPos.X, genPos.Y);
	}
	 
	function genDraw(event){
	    var coors = genGgetPosition(event);
	    genContext.lineTo(coors.X, coors.Y);
	    genPos.X = coors.X;
	    genPos.Y = coors.Y;
	    genContext.stroke();
	}
	 
	function genFinishDraw(){
		genPos.drawable = false;
		genPos.X = -1;
		genPos.Y = -1;
	}
	 
	function genGetPosition(event){
	    //pageX 문서높이 기준
        //clienX 보이는 화면 기준
        var v_left = genCanvas.getBoundingClientRect().left;
        var v_top =genCanvas.getBoundingClientRect().top;

		//뭐얌 그냥 화면에서 얼마나 이동했는지만 체크해 주면 되남
        var x = event.clientX - v_left;
	    var y = event.clientY - v_top;

	    return {X: x, Y: y};
	} */
	    	
	
	$("#btn-clear").on("click", function() {
		context.clearRect(0, 0, canvas.width, canvas.height);
		context.beginPath();
	});
	
	let contractId  = $("#contractId").text();
	let divTag = null;
	$("#btn-save").on("click", function() {
	    
	 	 // Convert canvas to dataURL and log to console
	    divTag = $(this).closest(".clearfix");
	    const dataURL = canvas.toDataURL();
	    const sign = getBase64StringFromDataURL(dataURL);
	    
	    if($("#role").text() == 'ROLE_GENMEM') {
	    	genSubmit(sign);
	    } else if($("#role").text() == 'ROLE_COMMEM') {
	    	comSubmit(sign);
	    }
	      
	});
	
	function genSubmit(sign) {
		let memId = $("#genId").text().split(" ", 1).toString();
	    let genSign = sign;

		console.log("gen 넘어옴");
		
		$.ajax({
			url : "${cPath}/outsourcing/contract/gen/" + contractId,
			method : "post",
			contentType: 'application/json; charset=utf-8',
			data : JSON.stringify({
				contractId : contractId,
	    		memId : memId,
	    		genSign : genSign
			}),
			dataType : "json" // text, html, json, xml, script -> main type : text, 파일 업로드 처리를 비동기로? (FormData)
			,
			beforeSend : function(xhr)
			{
			   xhr.setRequestHeader(header,token);
			},
			success : function(resp, status, jqXHR) {
				let contract = resp;
				console.log("contract:" + contract);
				const image = document.createElement('img');
				image.src = "data:image/jpeg;base64," + contract.genSign;
				console.log("sign:" + contract.genSign);
				image.height = canvas.height;
				image.width = canvas.width;
				image.style.display = 'block';
				document.querySelector(".genImg").appendChild(image);
				context.clearRect(0, 0, canvas.width, canvas.height);
				context.beginPath();
				divTag.remove();
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		}); 	 
	}
	
	function comSubmit(sign) {
		let memId = $("#comId").text().split(" ", 1).toString();
		let comSign = sign;
		
		
		$.ajax({
			url : "${cPath}/outsourcing/contract/com/" + contractId,
			method : "post",
			contentType: 'application/json; charset=utf-8',
			data : JSON.stringify({
				contractId : contractId,
				memId : memId,
				comSign : comSign
			}),
			dataType : "json" // text, html, json, xml, script -> main type : text, 파일 업로드 처리를 비동기로? (FormData)
			,
			beforeSend : function(xhr)
			{
			   xhr.setRequestHeader(header,token);
			},
			success : function(resp, status, jqXHR) {
				let contract = resp;
				console.log("contract:" + contract);
				const image = document.createElement('img');
				image.src = "data:image/jpeg;base64," + contract.comSign;
				console.log("sign:" + contract.comSign);
				image.height = canvas.height;
				image.width = canvas.width;
				image.style.display = 'block';
				document.querySelector(".comImg").appendChild(image);
				context.clearRect(0, 0, canvas.width, canvas.height);
				context.beginPath();
				divTag.remove();
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		}); 	
	}
	
	
	const getBase64StringFromDataURL = (dataURL) =>
    dataURL.replace('data:', '').replace(/^.+,/, '');
	</script>

	<script src="https://code.jquery.com/jquery-3.6.0.min.js"
		crossorigin="anonymous"></script>
</body>
</html>