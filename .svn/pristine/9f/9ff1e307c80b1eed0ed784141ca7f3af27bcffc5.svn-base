package kr.or.ddit.common.mypage.project.manageProject.controller;

import java.security.Principal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.common.member.vo.MemberPrincipal;
import kr.or.ddit.common.member.vo.MemberVO;
import kr.or.ddit.common.mypage.project.manageProject.service.ProjectManageService;
import kr.or.ddit.common.vo.PagingVO;
import kr.or.ddit.common.vo.SimpleSearchCondition;
import kr.or.ddit.outsourcing.vo.OutProjVO;
import kr.or.ddit.pms.issue.vo.IssueVO;
import lombok.extern.slf4j.Slf4j;

//(일반, 기업 공통) 현재 진행중인 내가 참여한 프로젝트 목록을 불러옴
/**
 * @author 신창규
 * @since 2022. 8. 2.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2022. 8. 2.      306-06       최초작성
 * Copyright (c) 2022 by DDIT All right reserved
 * </pre>
 */
@Slf4j
@Controller
@RequestMapping("/myinfo/project")
public class ProjectManageController {
	@Inject
	ProjectManageService service;
	
	@ModelAttribute("simpleCondition")
	public SimpleSearchCondition simpleCondition() {
		return new SimpleSearchCondition();
	}
	
	
	@GetMapping()
	public String progressProjectList(
			Model model
			, Authentication authentication
			, @RequestParam(name="page", required=false, defaultValue="1")int currentPage
			, @RequestParam(value="searchWord", required=false)String searchWord
			, @ModelAttribute("simpleCondition") SimpleSearchCondition simpleCondition
			) {	
		PagingVO<IssueVO> pagingVO = new PagingVO<>(6, 5);
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setSimpleCondition(simpleCondition);
		
		String viewName = null;
		MemberPrincipal userPrincipal = (MemberPrincipal) authentication.getPrincipal();
		MemberVO member = userPrincipal.getRealMember();
		log.info(member.getMemType().toString());
		
		Map<String, Object> pagingMap = new HashMap<>();
		pagingMap.put("pagingVO", pagingVO);
		pagingMap.put("member", member);
		
		List<OutProjVO> projList = service.findAll(pagingMap);
		model.addAttribute("projList", projList);
		
		if("ROLE_GENMEM".equals(member.getMemType().get(0).toString())) {
			viewName = "common/mypage/gen/genProj";
		} else if("ROLE_COMMEM".equals(member.getMemType().get(0).toString())) {
			viewName = "common/mypage/com/comProj";
		}
		return viewName;
	}
}
