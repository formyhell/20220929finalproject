package kr.or.ddit.admin.outsourcing.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.admin.outsourcing.service.CheckListService;
import kr.or.ddit.common.enumpkg.ServiceResult;
import kr.or.ddit.outsourcing.vo.OutProjVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("admin/outProjList")
public class OutProjListController {
	@Inject
	CheckListService service;
	
	@GetMapping
	public String get(Model model) {
		List<OutProjVO> approveList = service.findApproveAll();
		List<OutProjVO> notApproveList = service.findNotApproveAll();
		model.addAttribute("approveList",approveList);
		model.addAttribute("notApproveList",notApproveList);
		return "admin/outProjList";
	}
	
	@GetMapping("{projId}")
	public String getProjDetail(
			@PathVariable String projId
			, Model model) {
		OutProjVO proj = service.findById(projId);
		model.addAttribute("proj", proj);
		return "admin/outProjDetail";
	}
	
	// 공고 반려
	@PostMapping("form/{projId}")
	public String denyProj(
			@PathVariable String projId
			,@ModelAttribute("projReject") String projReject
			,RedirectAttributes redirectAttributes
			,Model model
			) {
		String viewName = null;
		ServiceResult result = null;
		OutProjVO saveProj = service.findById(projId);
		saveProj.setProjReject(projReject);
		
		model.addAttribute("proj", saveProj);
		result = service.remove(saveProj);
		if(result.equals(ServiceResult.FAIL)) {
			model.addAttribute("message", "반려 사유를 입력하세요.");
			viewName = "admin/outProjDetail";
		} else {
			redirectAttributes.addFlashAttribute("message", "반려 처리에 성공했습니다.");
			viewName = "redirect:/admin/outProjList";
		}
		return viewName;
	}
	
	// 공고 승인
		@GetMapping("form/{projId}")
		public String accept(
				@PathVariable String projId
				, RedirectAttributes redirectAttributes
				, Model model) { 
			log.info("들어옴!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
			ServiceResult result = null;
			String viewName = null;
			OutProjVO outProj = service.findById(projId);
			model.addAttribute("proj", outProj);
			result = service.update(outProj);
			if(result.equals(ServiceResult.FAIL)) {
				model.addAttribute("message", "승인에 실패했습니다.");
				viewName = "admin/outProjDetail";
			} else {
				redirectAttributes.addFlashAttribute("message", "승인 처리에 성공했습니다.");
				viewName = "redirect:/admin/outProjList";
			}
			return viewName; 
		}
}
