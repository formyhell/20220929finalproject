package kr.or.ddit.admin.board.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.common.notice.service.NoticeService;
import kr.or.ddit.common.notice.vo.NoticeVO;
import kr.or.ddit.common.validate.DeleteGroup;
import kr.or.ddit.common.validate.InsertGroup;
import kr.or.ddit.common.validate.UpdateGroup;
import kr.or.ddit.common.vo.PagingVO;
import kr.or.ddit.common.vo.SimpleSearchCondition;


/**
 * @author 작성자명
 * @since 2022. 8. 2.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2022. 8. 2.      홍승조       컨트롤러 생성
 * 2022. 8. 6.      홍승조       컨트롤러 통합
 * 2022. 9. 1.      고혜인       컨트롤러 작성
 * Copyright (c) 2022 by DDIT All right reserved
 * </pre>
 */
@Controller
@RequestMapping("/admin/noticeList")
public class AdminNoticeController {

	@Inject
	private NoticeService service;

	@ModelAttribute("notice")
	public NoticeVO notice() {
		return new NoticeVO();
	}

	@GetMapping
	public String noticeList(
			@ModelAttribute("simpleCondition") SimpleSearchCondition simpleCondition
			, @RequestParam(value="searchType", required=false)String searchType
			, @RequestParam(value="searchWord", required=false)String searchWord
			, @RequestParam(value="page", required=false, defaultValue="1") int currentPage
			, Model model
	) {
		PagingVO<NoticeVO> pagingVO = new PagingVO<>(10,5);
		pagingVO.setSimpleCondition(simpleCondition);
		pagingVO.setCurrentPage(currentPage);
		service.findAllNotice(pagingVO);
		model.addAttribute("pagingVO",pagingVO);
		
		return "admin/board/adminNoticeList";
	}
	
	@GetMapping("form")
	public String noticeForm( Model model ) {
		List<NoticeVO> noticeList = service.parentNotice();
		
		model.addAttribute("noticeList",noticeList);
		return "admin/board/noticeForm";
	}
	
	@PostMapping
	public String noticeInsert(
			@Validated(InsertGroup.class) @ModelAttribute("notice") NoticeVO notice
			, Errors errors
	) {
		String viewName = null;
		if (!errors.hasErrors()) {
			service.createNotice(notice);
			viewName = "redirect:/admin/noticeList";
		} else {
			viewName = "admin/board/noticeForm";
		}
		return viewName;
	}
	

	@GetMapping("{notNo}/form")
	public String noticeEdit(
			@PathVariable int notNo
			, Model model
	) {
		List<NoticeVO> noticeList = service.parentNotice();
		NoticeVO notice = service.retrieveNotice(notNo);

		model.addAttribute("noticeList",noticeList);
		model.addAttribute("notice", notice);
		return "admin/board/noticeEdit";
	}
	
	@PutMapping("{notNo}/form")
	public String noticeUpdate(
			@Validated(UpdateGroup.class) @ModelAttribute("notice") NoticeVO notice
			, Errors errors
	) {
		String viewName = null;
		if (!errors.hasErrors()) {
			service.modifyNotice(notice);
			viewName = "redirect:/noticeList";
		} else {
			viewName = "admin/board/noticeEdit";
		}
		return viewName;
	}
	
	@DeleteMapping("{notNo}")
	public String noticeDelete(
			@Validated(DeleteGroup.class) @ModelAttribute("notice") NoticeVO notice
			, Errors errors
			, RedirectAttributes redirectAttributes
	) {
		String viewName = null;
		if (!errors.hasErrors()) {
			service.removeNotice(notice);
			redirectAttributes.addFlashAttribute("message", "삭제되었습니다");
			viewName = "redirect:/admin/noticeList";
		} else {
			redirectAttributes.addFlashAttribute("message", "오류가 발생했습니다");
			viewName = "redirect:/admin/noticeList";
		}
		return viewName;
	}

	
}
