<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.outsourcing.contract.dao.ContractDAO">
	<select id="selectApplicant" parameterType="String" resultType="String">
	<!-- kr.or.ddit.outsourcing.contract.dao.ContractDAO selectApplicant  -->
		SELECT APPLY_APPLICANT
		FROM APPLY_PROJ
		WHERE APPLY_ID = #{applyId}
	</select>
	
	<select id="selectRegist" parameterType="String" resultType="String">
	<!-- kr.or.ddit.outsourcing.contract.dao.ContractDAO selectRegist  -->
		SELECT PROJ_REGIST
		  FROM OUTSOURCING_PROJ A INNER JOIN APPLY_PROJ B ON(A.PROJ_ID=B.APPLY_PROJ)
		 WHERE APPLY_ID = #{applyId}
	</select>
	
	<insert id="insertContract" parameterType="kr.or.ddit.outsourcing.vo.ContractVO">
		INSERT INTO CONTRACT_PROJ (
		    CONTRACT_ID
		    , CONTRACT_APPLYID
		    , CONTRACT_NAME
		    , CONTRACT_PAY
		    , CONTRACT_SDATE
		    , CONTRACT_FDATE
		) VALUES (
		    FN_CREATE_CONTRACT_ID
		    , #{contractApplyid,jdbcType=VARCHAR}
		    , #{contractName,jdbcType=VARCHAR}
		    , #{contractPay,jdbcType=NUMERIC}
		    , TO_DATE(#{contractSdate,jdbcType=DATE}, 'YYYY/MM/DD')
		    , TO_DATE(#{contractFdate,jdbcType=DATE}, 'YYYY/MM/DD')
		)
	</insert>
	
	<select id="selectOne" parameterType="String" resultType="kr.or.ddit.outsourcing.vo.ContractVO">
	<!-- kr.or.ddit.outsourcing.contract.dao.ContractDAO selectOne  -->
        WITH OUTPROJVIEW AS (SELECT PROJ_REGIST, APPLY_ID
         FROM OUTSOURCING_PROJ INNER JOIN APPLY_PROJ ON (OUTSOURCING_PROJ.PROJ_ID=APPLY_PROJ.APPLY_PROJ))
        , COMVIEW AS ( SELECT TO_CHAR(COM_SIGN) COM_SIGN, APPLY_ID AS COM_APPLY
         FROM COM_MEMBER INNER JOIN OUTPROJVIEW ON (COM_MEMBER.COM_ID=OUTPROJVIEW.PROJ_REGIST))
         , GENVIEW AS ( SELECT GEN_ID, TO_CHAR(GEN_SIGN) GEN_SIGN, APPLY_ID AS GEN_APPLY
        FROM GEN_MEMBER INNER JOIN APPLY_PROJ ON (APPLY_PROJ.APPLY_APPLICANT=GEN_MEMBER.GEN_ID))
        SELECT DISTINCT CONTRACT_ID
		       , CONTRACT_APPLYID
		       , CONTRACT_NAME
		       , CONTRACT_PAY
		       , CONTRACT_STATE
		       , TO_CHAR(CONTRACT_SDATE, 'YYYY-MM-DD') CONTRACT_SDATE
		       , TO_CHAR(CONTRACT_FDATE, 'YYYY-MM-DD') CONTRACT_FDATE
               , TO_CHAR(COM_SIGN) COM_SIGN
               , TO_CHAR(GEN_SIGN) GEN_SIGN
               , TO_CHAR(CONTRACT_COMSIGN) CONTRACT_COMSIGN
               , TO_CHAR(CONTRACT_GENSIGN) CONTRACT_GENSIGN
               , CONTRACT_COMSTATE
               , CONTRACT_GENSTATE
          FROM CONTRACT_PROJ A INNER JOIN COMVIEW B ON (A.CONTRACT_APPLYID=B.COM_APPLY)
                               INNER JOIN GENVIEW C ON (A.CONTRACT_APPLYID=C.GEN_APPLY)           
		WHERE CONTRACT_APPLYID = #{applyId}
	</select>
	
	<select id="selectOnewithId" parameterType="String" resultType="kr.or.ddit.outsourcing.vo.ContractVO">
	<!-- kr.or.ddit.outsourcing.contract.dao.ContractDAO selectOnewithId  -->
        WITH OUTPROJVIEW AS (SELECT PROJ_REGIST, APPLY_ID
         FROM OUTSOURCING_PROJ INNER JOIN APPLY_PROJ ON (OUTSOURCING_PROJ.PROJ_ID=APPLY_PROJ.APPLY_PROJ))
        , COMVIEW AS ( SELECT TO_CHAR(COM_SIGN) COM_SIGN, APPLY_ID AS COM_APPLY
         FROM COM_MEMBER INNER JOIN OUTPROJVIEW ON (COM_MEMBER.COM_ID=OUTPROJVIEW.PROJ_REGIST))
         , GENVIEW AS ( SELECT GEN_ID, TO_CHAR(GEN_SIGN) GEN_SIGN, APPLY_ID AS GEN_APPLY
        FROM GEN_MEMBER INNER JOIN APPLY_PROJ ON (APPLY_PROJ.APPLY_APPLICANT=GEN_MEMBER.GEN_ID))
        SELECT DISTINCT CONTRACT_ID
		       , CONTRACT_APPLYID
		       , CONTRACT_NAME
		       , CONTRACT_PAY
		       , CONTRACT_STATE
		       , TO_CHAR(CONTRACT_SDATE, 'YYYY-MM-DD') CONTRACT_SDATE
		       , TO_CHAR(CONTRACT_FDATE, 'YYYY-MM-DD') CONTRACT_FDATE
               , TO_CHAR(COM_SIGN) COM_SIGN
               , TO_CHAR(GEN_SIGN) GEN_SIGN
               , TO_CHAR(CONTRACT_COMSIGN) CONTRACT_COMSIGN
               , TO_CHAR(CONTRACT_GENSIGN) CONTRACT_GENSIGN
               , CONTRACT_COMSTATE
               , CONTRACT_GENSTATE
          FROM CONTRACT_PROJ A INNER JOIN COMVIEW B ON (A.CONTRACT_APPLYID=B.COM_APPLY)
                               INNER JOIN GENVIEW C ON (A.CONTRACT_APPLYID=C.GEN_APPLY) 
		WHERE CONTRACT_ID = #{contractId}
	</select>
	
	<insert id="insertComSign" parameterType="kr.or.ddit.outsourcing.vo.ContractVO">
		UPDATE COM_MEMBER
		SET COM_SIGN = #{contractComsign,jdbcType=VARCHAR}
		WHERE COM_ID = #{memId}
	</insert>
	
	<insert id="insertGenSign" parameterType="kr.or.ddit.outsourcing.vo.ContractVO">
		UPDATE GEN_MEMBER
		SET GEN_SIGN = #{contractGensign,jdbcType=VARCHAR}
		WHERE GEN_ID = #{memId}
	</insert>
	
	<update id="updateComSign" parameterType="kr.or.ddit.outsourcing.vo.ContractVO">
		UPDATE CONTRACT_PROJ
		SET CONTRACT_COMSIGN = #{contractComsign,jdbcType=VARCHAR}
		WHERE CONTRACT_ID = #{contractId}
	</update>
	
	<update id="updateGenSign" parameterType="kr.or.ddit.outsourcing.vo.ContractVO">
		UPDATE CONTRACT_PROJ
		SET CONTRACT_GENSIGN = #{contractGensign,jdbcType=VARCHAR}
		WHERE CONTRACT_ID = #{contractId}
	</update>
	
	<update id="updateStateSign" parameterType="String">
		UPDATE CONTRACT_PROJ
			SET CONTRACT_STATE = 'SIGN'
			WHERE CONTRACT_ID = #{contractId}
	</update>
	
	<update id="updateConclude" parameterType="String">
		UPDATE CONTRACT_PROJ
			SET CONTRACT_STATE = 'CONCLUDE'
			WHERE CONTRACT_ID = #{contractId}
	</update>
	
	<update id="updateGenState" parameterType="String">
		UPDATE CONTRACT_PROJ
			SET CONTRACT_GENSTATE = 1
			WHERE CONTRACT_ID = #{contractId}
	</update>
	
	<update id="updateComState" parameterType="String">
		UPDATE CONTRACT_PROJ
			SET CONTRACT_COMSTATE = 1
			WHERE CONTRACT_ID = #{contractId}
	</update>
</mapper>